#!/bin/bash
#SBATCH -J mpiv
#SBATCH -o results/%j.txt
#SBATCH -e errors/%j.txt
#SBATCH -n 2
#SBATCH -N 2 
#SBATCH -p development
#SBATCH -t 00:30:00
#SBATCH -A TG-CCR130058

# This script run on development queue of Stampede (up to 16 nodes), for more
# use 'normal' instead of 'development'
# Remember to mkdir results, errors
# Usage: sbatch small.sub, to check for job: squeue -u $USER

cd ${SLURM_SUBMIT_DIR}

# MODIFY THIS TO YOUR LIB PATH
# EXPORT LD_LIBRARY_PATH=$HOME/QTHREAD/LIB:$HOME/ARGO/LIB:$HOME/GASNET/LIB:$LD_LIBRARY_PATH

# SETTING proper MVAPICH2:
export MV2_USE_RDMA_FAST_PATH=0 # DISABLE FAST PATH

echo "Single threaded pingpong (with compute)"

ibrun -np 2 taskset 0x3 ./pingpong_osu
MV2_ENABLE_AFFINITY=0 MPICH_ASYNC_PROGRESS=1 ibrun -np 2 taskset 0x3 pingpong_osu
MV2_ENABLE_AFFINITY=0 ibrun -np 2 ./pingpong_osu_mt
ibrun -np 2 ./pingpong_compute_cond
ibrun -np 2 ./pingpong_compute_abt
ibrun -np 2 ./pingpong_compute
./compute

#NTHREAD=14
#NWORKER=14
#echo "Multi-threaded pingpong:" $NTHREAD $NWORKER
#MV2_ENABLE_AFFINITY=0 ibrun -np 2 ./pingpong_mt_pthread $NTHREAD $NWORKER
#ibrun -np 2 ./pingpong_mt_cond $NTHREAD $NWORKER
#ibrun -np 2 ./pingpong_mt_abt $NTHREAD $NWORKER
#ibrun -np 2 ./pingpong_mt $NTHREAD $NWORKER
